「羊隻生長預測」功能修訂版開發建議 v2.0
本計畫旨在建立一個結合健壯數據處理、精準統計模型、智慧LLM解讀與直觀前端互動的先進預測功能。

Phase 1: 後端開發 (建立一個更聰明、更穩健的核心)
1. API端點設計 (更具彈性):

修改端點，增加可選參數 target_days，並給予預設值。
GET /api/goats/<string:ear_tag>/prediction?target_days=30

前端可以透過這個參數，讓使用者自由選擇預測30天、60天或90天後的狀況。

2. 數據預處理與品質檢驗 (Garbage In, Gospel Out 的第一道防線):
在進行任何計算前，必須先對數據進行嚴格的「健康檢查」。

實作data_quality_check函式：

數據點數量檢查：查詢歷史體重數據，若 count < 3 (建議至少3點才能形成趨勢)，則直接回傳數據不足的錯誤。

時間跨度檢查：計算最早與最晚紀錄日期的差距，若 time_span < 15 days (可調參數)，則標記為「時間跨度不足」，這將影響後續建議的信心度。

異常值偵測與處理：

計算所有體重數據的平均值 (μ) 與標準差 (σ)。

將超出 μ ± 3σ 範圍的數據點標記為「潛在異常值」。

策略：在第一版中，可以先標記但不剔除，並將此狀況告知LLM。進階版則可考慮剔除後再計算。

輸出：此函式最終會生成一個「數據品質報告」物件，例如：{'status': 'Warning', 'message': '數據點充足但時間跨度較短，且偵測到1筆潛在異常值。'}。

3. 核心預測邏輯 (以統計為基石):

選定數據：基於預處理結果，使用「乾淨」的數據集進行模型訓練。

線性迴歸：

使用scikit-learn進行線性迴歸，X為「出生後天數」，Y為「體重」。

日增重計算：明確地從訓練好的模型中取得斜率 (model.coef_)，這就是最能代表模型趨勢的平均日增重 (average_daily_gain)。

預測與區間：

使用模型預測 target_days 後的體重。

(進階/Bonus) 計算預測值的信賴區間 (Confidence Interval) 或 預測區間 (Prediction Interval)。這能極大地提升功能的專業性，讓使用者了解預測的不確定性。

4. LLM提示詞微調 (賦予AI領域知識與情境感知):
這是本次優化的靈魂。我們將打造一個能理解數據品質、具備領域知識且緊扣專案主題的提示。

# 角色扮演指令
你是一位資深的智慧牧場營養學專家「領頭羊博士」，兼具ESG永續經營的顧問視角。請用繁體中文，以專業、溫暖且數據驅動的語氣進行分析，並將各部分回覆控制在2-3句話內。

# 羊隻資料
- 耳號: {ear_tag}
- 品種: {breed}
- 性別: {sex}
- 目前月齡: {current_age_in_months} 個月

# 數據品質評估 (由我方系統提供)
- 數據品質狀況: {data_quality_report.status}
- 評估說明: {data_quality_report.message}

# 統計分析結果 (由我方系統提供)
- 預測目標: {target_days} 天後的體重
- 預測體重: {predicted_weight} 公斤
- 模型平均日增重: {average_daily_gain} 公斤/天

# 領域知識錨點 (由我方系統提供)
- 參考指標: 根據文獻，{breed}品種的山羊在此月齡，健康的日增重範圍約為 {min_gain} 到 {max_gain} 公斤/天。

# 你的任務
請基於以上所有資訊，特別是「數據品質評估」和「領域知識錨點」，生成一份包含以下三部分的分析報告：

1.  **生長潛力解讀**: 結合數據品質，解讀預測體重。將「模型平均日增重」與「參考指標」進行比較，判斷其增長趨勢（例如：優於預期、符合標準、略顯緩慢、因數據品質有限建議謹慎看待）。
2.  **飼養管理與ESG建議**: 根據生長情況，提供1-2項具體建議。**請務必在建議中融入ESG理念**，例如如何透過精準飼餵減少浪費（環境E），或如何調整管理方式提升動物福利（社會S）。
3.  **透明度與提醒**: 根據數據品質，提供一個客製化的提醒。如果品質好，則肯定數據記錄的價值；如果品質差，則鼓勵用戶更頻繁、準確地記錄數據以獲得更可靠的分析。
Phase 2: 前端開發 (打造直觀、透明、專業的使用者介面)
1. 互動元件設計:

耳號輸入：增加搜尋與自動完成功能，當使用者輸入時，下方出現符合條件的羊隻列表供點選。

預測時長：在「開始預測」按鈕旁，增加一個下拉選單，讓使用者選擇「預測30天後」、「預測60天後」。

載入狀態：點擊按鈕後，按鈕應變為禁用(disabled)狀態，並顯示Loading動畫，直到API回傳結果。

2. 數據視覺化圖表 (Chart.js):
圖表的清晰度是專業性的體現。

歷史數據點：使用藍色實心圓點表示。

擬合趨勢線：使用灰色實線表示，代表歷史數據的整體趨勢。

未來預測線/點：從趨勢線末端延伸，使用紅色虛線，並在預測的終點使用一個紅色星號或空心圓標示。

圖例 (Legend)：必須清楚標示出「歷史紀錄」、「增長趨勢」、「未來預測」三種圖形元素的意義。

互動提示 (Tooltip)：滑鼠懸停在任何點上時，應顯示該點的詳細資訊（日期、天數、體重）。

3. 資訊呈現佈局:

關鍵資訊置頂：將「此預測基於 {N} 筆有效歷史資料」這句話，放在圖表標題正下方或核心指標卡片中，使其極度醒目。

結果分區：左側為包含圖表的「數據分析區」，右側為「領頭羊博士AI報告區」，佈局清晰。

Phase 3: 測試與驗證
後端：重點測試data_quality_check函式在各種邊界條件（數據少、時間短、有異常值）下的行為是否符合預期。

前端：確保所有互動元件（自動完成、下拉選單、載入狀態）工作正常。